basePath: /api
definitions:
  dto.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  dto.LoginResponse:
    properties:
      token:
        type: string
      userId:
        type: string
    type: object
  dto.RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        maxLength: 15
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  dto.SessionResponse:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  models.JSONResponseModel:
    properties:
      data: {}
      errors: {}
      message:
        type: string
    type: object
info:
  contact:
    email: jmcb1602@gmail.com
    name: Jevon Mozart
  description: This is an API for SEA Catering application.
  title: SEA Catering API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.LoginResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONResponseModel'
      summary: Login as User
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.JSONResponseModel'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONResponseModel'
      summary: Register as User
      tags:
      - Auth
  /auth/session:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.SessionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.JSONResponseModel'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.JSONResponseModel'
      security:
      - BearerAuth: []
      summary: Get User Session
      tags:
      - Auth
securityDefinitions:
  BearerAuth:
    description: 'Example Value: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
